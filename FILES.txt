---- project structure ----

-- sources that went missing from Koush's devel branch --
TODO: Should bring these back and put them in /androidmono/Legacy?

MonoDevelop.Android
    Experimental: A MonoDevelop plugin for building Android applications.

MonoActivity/jni/fwdstdin
    Forwards all input from stdin to a ipaddress/port. This is used by the MonoDevelop.Android plugin for reading console output.
    
-- sources --

MonoJavaBridge
		Contains C# and Java sub-projects to handle interop between Android/Java and Mono.

MonoJavaBridge/JavaBridge
    Contains the C# source that handles interop with Dalvik/JVM.
    
MonoJavaBridge/MonoBridge
  	Contains the Java source that handles interop with Mono.

MonoJavaBridge/android
		Contains generated C# sources for calling or binding into the Android API, and some support code used by the generated sources. NOTE: I may end up replacing this with the Mono for Android bindings, which are supposedly MIT licensed, but still require the commercial product to generate, which may make the license irrelevant.

MonoJavaBridge/JavaObjectModelGenerator
		Java utility to read in a jar file and output an XML representation of the callable code within the jar file. Used to generate MonoJavaBridge/androidsdk.xml, which is subsequently used to generate C# bindings code in MonoJavaBridge/android.

MonoJavaBridge/MonoDroid
		C# utility to read in androidsdk.xml (generated by MonoJavaBridge/JavaObjectModelGenerator) and generate the C# bindings in MonoJavaBridge/android.

MonoJavaBridge/HelloWorldConsole
		I have no idea what this is or why it's here. Came from a fork. I think it's a command line based test app for mono on android?
		
MonoActivity
    The activity that contains and extracts mono, libmono.so, and .NET assemblies. 

MonoActivity/jni
    Contains all the code that is to be built by the NDK, including mono.

MonoActivity/jni/MonoJavaInterop
    JNI Interop layer to connect Mono and Dalvik by embedding Mono.
    
MonoActivity/jni/PlatformPatches (NOT USED CURRENTLY)
    All the Android headers and configs necessary to compile Mono.

-- mono directories --

MonoActivity/jni/mono
    The checkout of mono to be build for Android. This directory is generated and
    managed by get-mono.sh. NOTE: this may be moved in the future, so that only the output libraries are copied into MonoActivity/jni/mono from, say, hostbuild/mono_arm_install or similar.

hostbuild
    Contains the checkout of mono and mcs to build the assemblies for a host build
    that will be packaged in the APK. This directory is generated and managed by
    get-mono.sh.


-- output directories --

MonoActivity/libs
    This is where mono and libmono.so [ARE SUPPOSED TO] get placed when built by the NDK [BUT ARE NOT CURRENTLY. WE JUST SWITCHED TO THE STANDALONE ANDROID NDK TOOLCHAIN TO BUILD THE MONO RUNTIME, SO THIS PART IS NOT YET WORKING].
